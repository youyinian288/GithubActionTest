name: Pull Request Automation

run-name: "[Pull Reqeust Automation] ${{ github.event.pull_request.title || github.ref }}"

on:
  pull_request:
    types: [opened, synchronize, reopened]

# Ê∑ªÂä†ÊùÉÈôêËÆæÁΩÆ
permissions:
  pull-requests: write
  issues: write
  contents: read
  repository-projects: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  label-pr-by-file-count:
    name: Label PR by changes file count
    continue-on-error: true
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - name: Get changed file count and apply label
        id: get-changed-files-count-by-gh
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          REPO=${{ github.repository }}

          FILE_COUNT=$(gh pr view $PR_NUMBER --repo $REPO --json files --jq '.files | length')
          echo "Changed file count: $FILE_COUNT"

          if [ "$FILE_COUNT" -lt 5 ]; then
            LABEL="XS"
          elif [ "$FILE_COUNT" -lt 10 ]; then
            LABEL="S"
          elif [ "$FILE_COUNT" -lt 30 ]; then
            LABEL="M"
          elif [ "$FILE_COUNT" -lt 80 ]; then
            LABEL="L"
          elif [ "$FILE_COUNT" -lt 200 ]; then
            LABEL="XL"
          else
            LABEL="XXL"
          fi

          EXISTING_LABELS=$(gh pr view "$PR_NUMBER" --repo "$REPO" --json labels --jq '.labels[].name')
          for EXISTING in $EXISTING_LABELS; do
            case "$EXISTING" in
              XS|S|M|L|XL|XXL)
                echo "üßπ Removing existing label: $EXISTING"
                gh pr edit "$PR_NUMBER" --repo "$REPO" --remove-label "$EXISTING"
                ;;
            esac
          done

          if ! gh label list --repo "$REPO" | grep -q "^$LABEL"; then
            echo "üÜï Creating missing label: $LABEL"
            gh label create "$LABEL" --repo "$REPO" --description "Size label: $LABEL" --color "ededed"
          else
            echo "‚úÖ Label '$LABEL' already exists"
          fi
          
          gh pr edit $PR_NUMBER --repo $REPO --add-label "$LABEL"

  assign-self-if-no-assignee:
    name: Automatically assign to self if no assignee is specified
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    continue-on-error: true
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - name: Assign self if No Assignee
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.pull_request;
            const assignees = issue.assignees || [];
            const me = context.actor;

            if (assignees.length === 0) {
              await github.rest.issues.addAssignees({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                assignees: [me]
              });

              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `üîß No assignee was set, so I have assigned this to myself (@${me}).`
              });
            }

  append-author-to-pr-description:
    name: Append author to PR description
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    continue-on-error: true
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Append author to PR description
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          AUTHOR_TAG: '@${{ github.event.pull_request.user.login }}'
        run: |
          PR_BODY=$(gh pr view $PR_NUMBER --repo ${{ github.repository }} --json body -q ".body")
          NEW_BODY=$(printf "%s\n\nCreated by %s" "$PR_BODY" "$AUTHOR_TAG")
          gh pr edit $PR_NUMBER --repo ${{ github.repository }} --body "$NEW_BODY"
